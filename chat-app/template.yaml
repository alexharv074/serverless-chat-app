---
AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Serverless Chat App
Globals:
  Function:
    Timeout: 3
  Api:
    EndpointConfiguration: EDGE
    Cors:
      AllowMethods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"
Resources:
  ChatAppFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: index.handler
      Runtime: nodejs8.10
      Policies: AmazonS3ReadOnlyAccess
      Events:
        ProxyApiGreedy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
  ChatEmptyModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Ref ServerlessRestApi
      ContentType: application/json
      Name: Empty
      Schema:
        "$schema": "http://json-schema.org/draft-04/schema#"
        title: Empty Schema
        type: object
  ChatErrorModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Ref ServerlessRestApi
      ContentType: application/json
      Name: Error
      Schema:
        "$schema": "http://json-schema.org/draft-04/schema#"
        title: Error Schema
        type: object
        properties:
          message:
            type: string
  ChatMessagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ChatMessages
      AttributeDefinitions:
        - AttributeName: ConversationId
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: ConversationId
          KeyType: HASH
        - AttributeName: Timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  ChatConversationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ChatConversations
      AttributeDefinitions:
        - AttributeName: ConversationId
          AttributeType: S
        - AttributeName: Username
          AttributeType: S
      KeySchema:
        - AttributeName: ConversationId
          KeyType: HASH
        - AttributeName: Username
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: Username-ConversationId-index
          KeySchema:
            - AttributeName: Username
              KeyType: HASH
            - AttributeName: ConversationId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
  ChatDynamoDB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ChatDynamoDB
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:Query
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ChatConversations
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ChatMessages
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ChatConversations/index/Username-ConversationId-index
Outputs:
  ChatAppEndpoint:
    Description: API Gateway endpoint URL for Prod stage for Chat API function
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
